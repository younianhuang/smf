/****************************************************************************
** Meta object code from reading C++ file 'tst_TestAsyncTest.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.5.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_TestAsyncTest.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.5.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_TestAsyncTest_t {
    QByteArrayData data[17];
    char stringdata0[260];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestAsyncTest_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestAsyncTest_t qt_meta_stringdata_TestAsyncTest = {
    {
QT_MOC_LITERAL(0, 0, 13), // "TestAsyncTest"
QT_MOC_LITERAL(1, 14, 12), // "initTestCase"
QT_MOC_LITERAL(2, 27, 0), // ""
QT_MOC_LITERAL(3, 28, 25), // "testBindNonMemberFunction"
QT_MOC_LITERAL(4, 54, 25), // "testBindMemberFunctionInt"
QT_MOC_LITERAL(5, 80, 27), // "testBindMemberFunctionFloat"
QT_MOC_LITERAL(6, 108, 28), // "testBindMemberFunctionString"
QT_MOC_LITERAL(7, 137, 15), // "cleanupTestCase"
QT_MOC_LITERAL(8, 153, 11), // "setIntValue"
QT_MOC_LITERAL(9, 165, 5), // "value"
QT_MOC_LITERAL(10, 171, 11), // "getIntValue"
QT_MOC_LITERAL(11, 183, 13), // "setFloatValue"
QT_MOC_LITERAL(12, 197, 13), // "getFloatValue"
QT_MOC_LITERAL(13, 211, 14), // "setStringValue"
QT_MOC_LITERAL(14, 226, 11), // "std::string"
QT_MOC_LITERAL(15, 238, 14), // "getStringValue"
QT_MOC_LITERAL(16, 253, 6) // "string"

    },
    "TestAsyncTest\0initTestCase\0\0"
    "testBindNonMemberFunction\0"
    "testBindMemberFunctionInt\0"
    "testBindMemberFunctionFloat\0"
    "testBindMemberFunctionString\0"
    "cleanupTestCase\0setIntValue\0value\0"
    "getIntValue\0setFloatValue\0getFloatValue\0"
    "setStringValue\0std::string\0getStringValue\0"
    "string"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestAsyncTest[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      12,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   74,    2, 0x08 /* Private */,
       3,    0,   75,    2, 0x08 /* Private */,
       4,    0,   76,    2, 0x08 /* Private */,
       5,    0,   77,    2, 0x08 /* Private */,
       6,    0,   78,    2, 0x08 /* Private */,
       7,    0,   79,    2, 0x08 /* Private */,
       8,    1,   80,    2, 0x08 /* Private */,
      10,    0,   83,    2, 0x08 /* Private */,
      11,    1,   84,    2, 0x08 /* Private */,
      12,    0,   87,    2, 0x08 /* Private */,
      13,    1,   88,    2, 0x08 /* Private */,
      15,    0,   91,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::Int,    9,
    QMetaType::Int,
    QMetaType::Void, QMetaType::Float,    9,
    QMetaType::Float,
    QMetaType::Void, 0x80000000 | 14,    9,
    0x80000000 | 16,

       0        // eod
};

void TestAsyncTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TestAsyncTest *_t = static_cast<TestAsyncTest *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->testBindNonMemberFunction(); break;
        case 2: _t->testBindMemberFunctionInt(); break;
        case 3: _t->testBindMemberFunctionFloat(); break;
        case 4: _t->testBindMemberFunctionString(); break;
        case 5: _t->cleanupTestCase(); break;
        case 6: _t->setIntValue((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 7: { int _r = _t->getIntValue();
            if (_a[0]) *reinterpret_cast< int*>(_a[0]) = _r; }  break;
        case 8: _t->setFloatValue((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 9: { float _r = _t->getFloatValue();
            if (_a[0]) *reinterpret_cast< float*>(_a[0]) = _r; }  break;
        case 10: _t->setStringValue((*reinterpret_cast< const std::string(*)>(_a[1]))); break;
        case 11: { string _r = _t->getStringValue();
            if (_a[0]) *reinterpret_cast< string*>(_a[0]) = _r; }  break;
        default: ;
        }
    }
}

const QMetaObject TestAsyncTest::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestAsyncTest.data,
      qt_meta_data_TestAsyncTest,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *TestAsyncTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestAsyncTest::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_TestAsyncTest.stringdata0))
        return static_cast<void*>(const_cast< TestAsyncTest*>(this));
    return QObject::qt_metacast(_clname);
}

int TestAsyncTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 12)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 12;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 12)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 12;
    }
    return _id;
}
QT_END_MOC_NAMESPACE
